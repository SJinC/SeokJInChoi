{
  
    
        "post0": {
            "title": "파이썬 3월 7일",
            "content": "int, float, bool, str 자료형 . June 24, 2022 | . &#51088;&#47308;&#54805; . - 파이썬의 기본 자료형은 int,float,bool,str,list,tuple,dict,set 등이 있다. . 0차원 자료형 : int, float, bool | 1차원 자료형 : str, list, tuple, dict, set | . int, float, bool . - int형 . a=100 . type(a) . int . a? . Type: int String form: 100 Docstring: int([x]) -&gt; integer int(x, base=10) -&gt; integer Convert a number or string to an integer, or return 0 if no arguments are given. If x is a number, return x.__int__(). For floating point numbers, this truncates towards zero. If x is not a number or if base is given, then x must be a string, bytes, or bytearray instance representing an integer literal in the given base. The literal can be preceded by &#39;+&#39; or &#39;-&#39; and be surrounded by whitespace. The base defaults to 10. Valid bases are 0 and 2-36. Base 0 means to interpret the base from the string as an integer literal. &gt;&gt;&gt; int(&#39;0b100&#39;, base=0) 4 . - float형 . b=1.2*3 b . 3.5999999999999996 . type(b) . float . b? . Type: float String form: 3.5999999999999996 Docstring: Convert a string or number to a floating point number, if possible. . - bool형 . c=True d=False . type(c),type(d) . (bool, bool) . c? . Type: bool String form: True Docstring: bool(x) -&gt; bool Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed. . - bool형의 연산 . c+d . 1 . c*d . 0 . - complex형 . e=1+2j f=2-2j . type(e) . complex . type(f) . complex . g=e+f g . (3+0j) . - 형태변환: float -&gt; int . (예시1) . a=3.0 type(a) . float . a=int(a) . type(a) . int . (예시2) -&gt; 이 경우에는 정보의 손실 발생 . a=3.14 type(a) . float . a=int(a) . a . 3 . - 형태변환 : int -&gt; float . a=3 type(a) . int . a=float(a) type(a) . float . - 형태변환: bool -&gt; int/float , int/float -&gt; bool . (예시1) . a=True type(a) . bool . int(a) . 1 . float(a) . 1.0 . (예시2) . a=1 bool(a) . True . a=0 bool(a) . False . (예시3) . a=1.0 bool(a) . True . b=0.0 bool(b) . False . - 형태변환이 항상 가능한 것도 아님.. . float(3+0j) . TypeError Traceback (most recent call last) Input In [40], in &lt;cell line: 1&gt;() -&gt; 1 float(3+0j) TypeError: can&#39;t convert complex to float . - 암묵적형변환 (implicit) -&gt; 은연중에 내포된, 함축적인... . (예제) . True*1 #int형을 곱하면 암묵적으로 bool형이 int로 연산됨. . 1 . 1*1.0 #float을 곱하면 암묵적으로 int형이 bool형으로 연산됨. . 1.0 . True+True #+연산을 하면 암묵적으로 int/float형으로 변환 . 2 . str . - 선언 . a=&#39;seokjin&#39; . a . &#39;seokjin&#39; . - 연산 . 더하기(+) 연산 | . a=&#39;X&#39; b=&#39;2&#39; . a+b . &#39;X2&#39; . 빼기(-) 연산 (정의되지 않음) | . a=&#39;X2&#39; b=&#39;2&#39; . a-b . TypeError Traceback (most recent call last) Input In [49], in &lt;cell line: 1&gt;() -&gt; 1 a-b TypeError: unsupported operand type(s) for -: &#39;str&#39; and &#39;str&#39; . 곱하기(*) 연산 | . a=&#39;X&#39; . a*3 #a*3=a+a+a . &#39;XXX&#39; . - 나누기(/) 연산 (정의되지 않음) . a=&#39;XX&#39; . a/2 . TypeError Traceback (most recent call last) Input In [55], in &lt;cell line: 1&gt;() -&gt; 1 a/2 TypeError: unsupported operand type(s) for /: &#39;str&#39; and &#39;int&#39; . &#51064;&#45937;&#49905; . - str은 하나의 벡터 문자가 여러개 있는 형태라고 생각하면 된다. . a=&#39;seokjin&#39; . a . &#39;seokjin&#39; . 6개의 칸에 글씨가 하나씩 들어가 있음. | . - 대괄호 []안에 숫자를 넣는 방식으로 벡터의 원소를 호출할 수 있다. (주의: 인덱스가 0부터 시작함) . a[0] #1번째 원소 . &#39;s&#39; . a[1] #2번째 원소 . &#39;e&#39; . a[-1] #마지막원소는 -1로 호출가능 . &#39;n&#39; . a[-2] #마지막에서 2번째 원소는 -2로 호출 . &#39;i&#39; . - 아래와 같은 방식으로 호출이 가능하다! . s e o k j i n . 0 | 1 | 2 | 3 | 4 | 5 | 6 | . 0 | -6 | -5 | -4 | -3 | -2 | -1 | . - :을 이용하여 여러개의 원소를 호출할 수 있다. . a[0:4] #a[0],a[1],a[2],a[3],a[4] 가 호출되는게 아니라 a[0],a[1],a[2],a[3]까지만 호출됨. 즉 마지막 4번째는 호출 되지 않는다 . &#39;seok&#39; . 1에서부터 끝까지 뽑고 싶다면?? -&gt; 그냥 생략하면 된다! . a[1:] . &#39;eokjin&#39; . 처음부터 4번째까지만 뽑고 싶으면?? -&gt; 마찬가지 생략! . a[:4] . &#39;seok&#39; . 다 뽑고 싶어도 그냥 생략하면됨 . a[:] . &#39;seokjin&#39; . str&#51032; &#53945;&#49688;&#44592;&#45733; . - 파이썬의 변수는 단순히 정보를 담는 그릇이 아니다. 유용한 기능을 제공한다. . a=&#39;ABCD&#39; . a.lower() #a.lower()을 쓰면 a의 모든 문자를 소문자로 바꾸는 기능을 함. . &#39;abcd&#39; . - 자료형에 특화된 기능 (method)를 확인하는 방법? a.+tab으로 목록 확인 가능 . a=&#39;seokjin&#39; . a.upper() . &#39;SEOKJIN&#39; . a.capitalize() . &#39;Seokjin&#39; . - a.f()형태를 읽는 방법 . 함수라고 생각하고 읽으면 된다. | a.f() = f(a) | . - .을 기준으로 상위개념.하위개념으로 이해! . 0&#52264;&#50896; vs 1&#52264;&#50896; . - len 함수 소개 : 원소의 개수를 알려주는 함수 . (0차원) len함수가 작동하지 않음 . a=3.14 . len(a) . TypeError Traceback (most recent call last) Input In [79], in &lt;cell line: 1&gt;() -&gt; 1 len(a) TypeError: object of type &#39;float&#39; has no len() . b=True len(b) . TypeError Traceback (most recent call last) Input In [81], in &lt;cell line: 2&gt;() 1 b=True -&gt; 2 len(b) TypeError: object of type &#39;bool&#39; has no len() . (1차원) len함수가 작동함 . a=&#39;3.14&#39; len(a) . 4 . b=[1,2,3] len(b) . 3 .",
            "url": "https://sjinc.github.io/SeokJInChoi/2022/06/23/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%EB%B3%B5%EC%8A%B5.html",
            "relUrl": "/2022/06/23/%E1%84%91%E1%85%A1%E1%84%8B%E1%85%B5%E1%84%8A%E1%85%A5%E1%86%AB-%E1%84%87%E1%85%A9%E1%86%A8%E1%84%89%E1%85%B3%E1%86%B8.html",
            "date": " • Jun 23, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://sjinc.github.io/SeokJInChoi/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://sjinc.github.io/SeokJInChoi/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "프로젝트 . 수상내역 . 대외활동 . ’-‘ 2019 삼성 SDS 멘토링 프로그램 참가(6월,11월) . ’-‘ 2019 DB기업경영캠프 (2019.8.26 ~ 2019.8.28) . ’-‘ 2019 대학교 해외봉사 활동 (라오스 / 2020.1.6 ~ 2020.1.20) . 프로그래밍 스킬 . ’-‘ Python . ’-‘ C . ’-‘ R .",
          "url": "https://sjinc.github.io/SeokJInChoi/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://sjinc.github.io/SeokJInChoi/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}